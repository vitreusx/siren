- hosts: all
  become: yes
  tasks:
    - name: create Docker config directory
      file:
        path: /etc/docker
        state: directory

    - name: changing Docker to systemd driver
      copy:
        dest: "/etc/docker/daemon.json"
        content: |
          {
          "exec-opts": ["native.cgroupdriver=systemd"]
          }

    - name: install docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: install apt-transport-https
      apt:
        name: apt-transport-https
        state: present

    - name: add k8s apt key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: add k8s apt repo
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: k8s

    - name: install kubelet
      apt:
        name: kubelet
        state: present

    - name: install kubeadm
      apt:
        name: kubeadm
        state: present

- hosts: control_planes
  become: yes
  tasks:
    - name: install kubectl
      apt:
        name: kubectl
        state: present

- hosts: control-1
  become: yes
  tasks:
    - name: initialize the cluster
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors "NumCPU,Mem" >kubeadm_init.txt || rm kubeadm_init.txt
      args:
        chdir: $HOME
        creates: kubeadm_init.txt

    - name: create ~/.kube as the ubuntu user
      become: yes
      become_user: ubuntu
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    - name: copy admin.conf
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        remote_src: yes
        owner: ubuntu

    - name: install pod network
      become: yes
      become_user: ubuntu
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml >pod_network_setup.txt || rm pod_network_setup.txt
      args:
        chdir: $HOME
        creates: pod_network_setup.txt

- hosts: control-1
  become: yes
  gather_facts: false
  tasks:
    - name: get join command
      shell: kubeadm token create --print-join-command
      register: join_command_task

    - name: set join command as a fact
      set_fact:
        join_command: "{{ join_command_task.stdout_lines[0] }}"

- hosts: nodes
  become: yes
  tasks:
    - name: join the cluster
      shell: "{{ hostvars['control-1'].join_command }} >node_joined.txt || rm node_joined.txt"
      args:
        chdir: $HOME
        creates: node_joined.txt
